name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: "Test File Service"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run Unit and Integration Tests
        run: make test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@afb2984f4d89672b2f9d9c13ae23d53779671984 # v2.19.0
        if: always()
        with:
          check_name: "Unit Test Results"
          files: test-results/unit-tests.xml

  build:
    name: Build Image
    needs: [test]
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-multi-architecture-image.yml@ce7e03453712dee1e56accf0a83a4349b1a97c42 # v3.10.0
    with:
      image_name: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service
      build_options: --file docker/file-service/Dockerfile

  push:
    name: "Push Image"
    runs-on: ubuntu-latest
    needs: [test, build]
    outputs:
      branch: ${{ steps.set-outputs.outputs.branch }}
      tag: ${{ steps.semver_tag.outputs.created_tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/\//-/g') >> $GITHUB_ENV
          fi
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7

      - name: Bump version
        id: semver_tag
        uses: ministryofjustice/opg-github-actions/.github/actions/semver-tag@c9c5dfb290b8f614df0884928c521165ba83d630 # v3.1.4
        with:
          default_bump: minor
          releases_enabled: false

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all

      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: /tmp/images
          name: multi-arch-image
      - name: Load Image
        run: |
          docker load -i /tmp/images/multi-arch-image.tar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Trivy Image Vulnerability Scanner
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1
          DOCKER_USERNAME: ${{ steps.login-ecr.outputs.docker_username_311462405659_dkr_ecr_eu_west_1_amazonaws_com }}
          DOCKER_PASSWORD: ${{ steps.login-ecr.outputs.docker_password_311462405659_dkr_ecr_eu_west_1_amazonaws_com }}
        run: make scan

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@1b549b9259bda1cb5ddde3b41741a82a2d15a841 # v3.28.13
        if: always()
        with:
          sarif_file: 'test-results/trivy.sarif'

      - name: Tag & Push
        run: |
          docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:${{ steps.semver_tag.outputs.created_tag }}
          if [ "$BRANCH_NAME" == "main" ]; then
            # We want all of the tags pushed
            docker tag  311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:main-${{ steps.semver_tag.outputs.created_tag }}
            docker tag  311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:main-${{ steps.semver_tag.outputs.created_tag }}-$(date +"%Y%m%d%H%M%S")
            docker push --all-tags 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service
          else
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file-service:${{ steps.semver_tag.outputs.created_tag }}
          fi

  push-tags:
    runs-on: ubuntu-latest
    needs: [build, push]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::997462338508:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-file-service-latest-green-build" --type "String" --value "${{ needs.push.outputs.tag}}" --overwrite --region=eu-west-1

      - name: Trigger Dev Deploy
        shell: bash
        run: curl -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/Deploy_to_Development/build?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&cause=Triggered+by+opg-file-service"
