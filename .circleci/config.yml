version: 2.1

workflows:
  pr-build-and-test:
    jobs:
      - test_file_service:
          name: test_file_service
      - build_file_service:
          name: build_file_service
          requires: [test_file_service]

orbs:
  file_service:
    commands:
      install_aws_cli:
        steps:
          - run:
              name: Install AWS CLI
              command: sudo pip3 install awscli --upgrade
      install_aws_local_wrapper:
        steps:
          - run:
              name: Install AWS Local Wrapper
              command: sudo pip3 install awscli-local --upgrade
      ecr_login:
        steps:
          - run:
              name: Login to ECR
              command: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::311462405659:role/sirius-ci --role-session-name ci)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
                eval $(aws ecr get-login --no-include-email --region=eu-west-1)
      test_localstack_setup:
        steps:
          - run:
              name: Localstack DynamoDB Setup
              command: |
                cd scripts/localstack
                chmod +x localstack_init.sh
                ./localstack_init.sh
    executors:
      python:
        docker: [image: circleci/python]
        resource_class: small

jobs:
  test_file_service:
    docker:
      - image: circleci/golang
        environment:
          TEST_RESULTS: /tmp/test-results
          GOTESTSUM_FORMAT: short-verbose
          DATA_DIR: /tmp/localstack/data
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
          DEFAULT_REGION: eu-west-1
          AWS_S3_ENDPOINT: http://localhost:4566
          AWS_DYNAMODB_ENDPOINT: http://localhost:4566
          SECRETS_MANAGER_ENDPOINT: http://localhost:4566
      - image: localstack/localstack:0.12.2
        environment:
          DEFAULT_REGION: eu-west-1
          SERVICES: s3,dynamodb,secretsmanager
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install PiP
          command: |
                sudo apt update
                sudo apt install python3-venv python3-pip
      - file_service/install_aws_cli
      - file_service/install_aws_local_wrapper
      - file_service/test_localstack_setup
      - run:
          name: Install Go Modules Dependencies
          command: go mod download
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Run Unit and Intergration Tests
          command: gotestsum --junitfile unit-tests.xml
      - store_test_results:
          path: /tmp/test-results

  build_file_service:
    executor: file_service/python
    parameters:
      container_repo_url:
        type: string
        default: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/file_service
    steps:
      - checkout
      - file_service/install_aws_cli
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: false
      - run:
          name: Build
          command: |
            docker build --file Dockerfile --tag file_service:latest .
      - file_service/ecr_login
      - run:
          name: Push container
          command: |
            export SHORT_HASH=${CIRCLE_SHA1:0:7} >> $BASH_ENV
            docker tag file_service:latest << parameters.container_repo_url >>:latest
            docker tag file_service:latest << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # We want all of the tags pushed
              docker push << parameters.container_repo_url >>
            else
              docker push << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
            fi
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Update Parameter Store Green Build value
                command: |
                  export SHORT_HASH=${CIRCLE_SHA1:0:7}
                  temp_role=$(aws sts assume-role --role-arn arn:aws:iam::997462338508:role/sirius-ci --role-session-name ci)
                  export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
                  export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
                  export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
                  aws ssm put-parameter --name "opg-file-service-latest-green-build" --type "String" --value "$CIRCLE_BRANCH-$SHORT_HASH" --overwrite --region=eu-west-1
            - run:
                name: Trigger Sirius Platform Deployment
                command: curl -u ${JENKINS_API_USER}:${JENKINS_API_TOKEN} "https://${JENKINS_URL}/job/Sirius/job/Deploy_to_Development/build?token=${JENKINS_API_TOKEN_NAME}&cause=Triggered+by+opg-file-service"
